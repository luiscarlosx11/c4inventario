<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="generales.ParameterValues" xml:space="preserve">
    <value>{"@idcurso":"32","@idsucursal":"9"}</value>
  </metadata>
  <data name="generales.SelectCommand" xml:space="preserve">
    <value>
select c.idcurso, c.idsucursal, c.nombre, c.clave as clavecurso, a.area,  e.especialidad, 
 i.nombre as instructor, i.curp, t.tipocurso, 
c.estatus, c.costo, cast(c.fechaini as char)as fechaini, 
cast(c.fechafin as char)as fechafin, cast(TIME_FORMAT(c.horaini, '%h:%i %p') as char)as horaini, 
cast(TIME_FORMAT(c.horafin, '%h:%i %p') as char)as horafin, c.horas, c.dias, c.observaciones, 
s.nombre as instalacion,
concat(s.calle,' # ', s.numext,' COL. ',s.colonia,' ',coalesce(s.localidad,''))as direccion,
 c.instalacionext, c.instalaciondomext, c.pagohora, c.costomodulo,
c.solicita, c.autoriza, 
s.nombre as nombresucursal, s.clavecct as clavesucursal, 
(
select p.numero 
from periodo p
 where c.fechafin between p.fechaini and p.fechafin
)as periodo, s.encargado,
(
select ce.cicloescolar 
from cicloescolar ce
 where c.fechafin between ce.fechaini and ce.fechafin
)as cicloescolar
from curso c 
left join area a on a.idarea = c.idarea 
left join especialidad e on e.idespecialidad = c.idespecialidad 
left join tipocurso t on t.idtipocurso = c.idtipocurso
left join instructor i on i.idinstructor = c.idinstructor 
left join instalacion lu on lu.idinstalacion = c.idinstalacion 
left join sucursal s on c.idsucursal = s.idsucursal
left join empresa em on em.idempresa = c.idempresa


where c.idcurso = @idcurso
and c.idsucursal = @idsucursal</value>
  </data>
  <metadata name="tabla.ParameterValues" xml:space="preserve">
    <value>{"@idcurso":"25","@idsucursal":"1"}</value>
  </metadata>
  <data name="tabla.SelectCommand" xml:space="preserve">
    <value>



select (
select count(idcurso)
from solicitudinscripcion 
where idcurso = @idcurso
)as total,c.idcurso, c.idsucursal, c.nombre, c.clave as clavecurso, a.area,  e.especialidad, 
 i.nombre as instructor, i.curp, t.tipocurso, 
c.estatus, c.costo, cast(c.fechaini as char)as fechaini, 
cast(c.fechafin as char)as fechafin, cast(TIME_FORMAT(c.horaini, '%h:%i %p') as char)as horaini, 

cast(TIME_FORMAT(c.horafin, '%h:%i %p') as char)as horafin, c.horas, c.dias, c.observaciones, 
s.nombre as instalacion,
concat(s.calle,' # ', s.numext,' COL. ',s.colonia,' ',coalesce(s.localidad,''))as direccion,
 c.instalacionext, c.instalaciondomext, c.pagohora, c.costomodulo,
c.solicita, c.autoriza, 
s.nombre as nombresucursal, s.clave as clavesucursal, ce.cicloescolar,

al.nocontrol, 
concat(al.apaterno,' ', al.amaterno,' ', al.nombre)as nombrealumno, si.becado, al.sexo, 
timestampdiff(YEAR,al.fechanacimiento,now())as edad,
es.idescolaridad as escolaridad,


(
select GROUP_CONCAT(distinct(d.iddiscapacidad) SEPARATOR ', ')
from discapacidad d 

left join alumnodiscapacidad ad  on ad.iddiscapacidad = d.iddiscapacidad

where ad.idalumno = si.idalumno
)as discapacidades,

si.idcondicion, ces.condicion, si.foliodiploma, cast(c.fechafin as char)as fechadiploma 


from curso c 

left join area a on a.idarea = c.idarea 

left join especialidad e on e.idespecialidad = c.idespecialidad 

left join tipocurso t on t.idtipocurso = c.idtipocurso
left join instructor i on i.idinstructor = c.idinstructor 

left join instalacion lu on lu.idinstalacion = c.idinstalacion 

left join sucursal s on c.idsucursal = s.idsucursal

left join solicitudinscripcion si on si.idcurso = c.idcurso

left join alumno al on al.idalumno = si.idalumno

left join empresa em on em.idempresa = c.idempresa

left join cicloescolar ce on c.idcicloescolar = ce.idcicloescolar

left join escolaridad es on es.idescolaridad = si.idescolaridad

left join condicionescolar ces on si.idcondicion = ces.idcondicion

where c.idcurso = @idcurso
and c.idsucursal = @idsucursal
and si.estatus not in('CANCELADO')
order by nombrealumno</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gDQBoA0AaANAGgDQBoD/2Q==
</value>
  </data>
</root>